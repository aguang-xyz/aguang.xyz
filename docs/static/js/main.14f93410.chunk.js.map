{"version":3,"sources":["components/header.module.css","plugins/serviceWorker.js","components/header.js","components/post-view.js","pages/post-page.js","components/search-box.js","components/image-view.js","components/post-preview.js","components/post-preview-container.js","pages/category-page.js","index.js","components/post-view.module.css","components/search-box.module.css","components/post-preview-container.module.css","components/post-preview.module.css","components/image-view.module.css"],"names":["module","exports","header","headerTitle","headerLink","Boolean","window","location","hostname","match","Header","react_default","a","createElement","className","styles","href","index_esm","React","Component","posts","Axios","create","baseURL","PostView","state","content","id","_this2","this","get","concat","then","ret","status","Error","setState","data","catch","e","loadContent","props","prevProps","value","latex_default","language","react_highlight_default","_this3","classNames","container","preview","push","join","react_markdown_default","source","plugins","RemarkMathPlugin","renderers","math","text","renderLatex","inlineMath","code","renderCode","PostPage","_this$props$match$par","params","category","name","post_view","SearchBox","_this","placeholder","change","onChange","target","ImageView","image","style","backgroundImage","src","PostPreview","post","onClick","assign","link","getLink","title","image_view","getPreview","gridModes","mobile","desktop","PostPreviewContainer","mode","getMode","innerWidth","_resizeHandler","addEventListener","removeEventListener","columns","length","itemsPerGroup","reduce","x","y","Math","max","apply","Object","toConsumableArray","areas","rows","_loop","i","matrix","cloneDeep","_loop2","j","map","row","forEach","gridTemplateRows","gridTemplateColumns","gridTemplateAreas","getStyleX","post_preview","key","gridArea","CategoryPage","search","_Yaml$safeLoad","Yaml","safeLoad","_this$state","filter","toLowerCase","indexOf","search_box","post_preview_container","filteredPosts","ReactDOM","render","react_router_dom","react_router","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,OAAA,uBAAAC,YAAA,4BAAAC,WAAA,0HCWEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kIC4BSC,mLApCX,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAOb,QACxBS,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAOZ,aACnBQ,EAAAC,EAAAC,cAAA,KAAGG,KAAK,IAAIF,UAAWC,IAAOX,YAA9B,kBAKFO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,iCACNL,EAAAC,EAAAC,cAACI,EAAA,EAAD,QAIJN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,wDACNL,EAAAC,EAAAC,cAACI,EAAA,EAAD,QAIJN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,+BACNL,EAAAC,EAAAC,cAACI,EAAA,EAAD,kBA5BKC,IAAMC,0ICYrBC,EAAQC,IAAMC,OAAO,CAEvBC,QAAS,WAsFEC,6MAjFXC,MAAQ,CAEJC,QAAS,wFAGDC,GAAI,IAAAC,EAAAC,KAEZT,EACKU,IADL,GAAAC,OACYJ,EADZ,QAEKK,KAAK,SAAAC,GAEF,GAAmB,MAAfA,EAAIC,OAKJ,MAAM,IAAIC,MAAM,kBAHhBP,EAAKQ,SAAS,CAAEV,QAASO,EAAII,SAMpCC,MAAM,SAAAC,GAEHX,EAAKQ,SAAS,CAAEV,QAAS,mEAMjCG,KAAKW,YAAYX,KAAKY,MAAMd,+CAGbe,GAEbA,EAAUf,KAAOE,KAAKY,MAAMd,IAE9BE,KAAKW,YAAYX,KAAKY,MAAMd,wCAIpBgB,GAER,OACIhC,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,KACK+B,sCAKFE,EAAUF,GAEjB,OACIhC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAgBE,UAAW+B,GACtBF,oCAKJ,IAAAI,EAAAlB,KAECmB,EAAa,CAAEjC,IAAOkC,UAAW,iBAOvC,OALIpB,KAAKY,MAAMS,SAEbF,EAAWG,KAAK,WAIdxC,EAAAC,EAAAC,cAAA,WAASC,UAAS,GAAAiB,OAAKiB,EAAWI,KAAK,OACnCzC,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CACI0C,OAAQzB,KAAKJ,MAAMC,QACnB6B,QAAS,CAACC,KACVC,UAAW,CACPC,KAAM,SAACC,GAAD,OAAUZ,EAAKa,YAAL,KAAA7B,OAAsB4B,EAAKhB,MAA3B,QAChBkB,WAAY,SAACF,GAAD,OAAUZ,EAAKa,YAAL,IAAA7B,OAAqB4B,EAAKhB,MAA1B,OACtBmB,KAAM,SAACA,GAAD,OAAUf,EAAKgB,WAAWD,EAAKjB,SAAUiB,EAAKnB,mBA3ErDzB,IAAMC,WCDd6C,mLAfJ,IAAAC,EAEoBpC,KAAKY,MAAMhC,MAAMyD,OAApCC,EAFDF,EAECE,SAAUC,EAFXH,EAEWG,KAElB,OAEEzD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACX,EAAD,MAEAS,EAAAC,EAAAC,cAACwD,EAAD,CAAU1C,GAAE,GAAAI,OAAKoC,EAAL,KAAApC,OAAiBqC,aAXdlD,IAAMC,6CCiBdmD,mLAhBJ,IAAAC,EAAA1C,KAEP,OAEElB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOkC,WAErBtC,EAAAC,EAAAC,cAAA,SACE2D,YAAY,WACZ7B,MAAOd,KAAKY,MAAMgC,OAClBC,SAAU,SAAAnC,GAAC,OAAIgC,EAAK9B,MAAMiC,SAASnC,EAAEoC,OAAOhC,kBAX9BzB,IAAMC,8ECOfyD,EAPG,SAACC,GAAD,OAEhBlE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOkC,UACjB6B,MAAO,CAAEC,gBAAe,OAAAhD,OAAS8C,EAAMG,IAAf,SCoCjBC,EAfK,SAACC,GAAD,OAElBvE,EAAAC,EAAAC,cAAA,OACEC,UAAWC,IAAOkC,UAClB6B,MAAOI,EAAKJ,MACZK,QAAS,kBAAM7E,OAAOC,SAAS6E,OA1BnB,SAACF,GAEf,OAAIA,EAAKG,KAEAH,EAAKG,KAGd,UAAAtD,OAAiBmD,EAAKvD,IAmBkB2D,CAAQJ,MAE9CvE,EAAAC,EAAAC,cAAA,kBACEF,EAAAC,EAAAC,cAAA,SAAIqE,EAAKK,QAnBI,SAACL,GAElB,OAAIA,EAAKL,MAEAlE,EAAAC,EAAAC,cAAC2E,EAAD,CAAWR,IAAKE,EAAKL,QAGvBlE,EAAAC,EAAAC,cAACwD,EAAD,CAAU1C,GAAIuD,EAAKvD,GAAIuB,SAAO,IAelCuC,CAAWP,KC9BVQ,EAAY,CAEhBC,OAAQ,CACN,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAGNC,QAAS,CACP,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KA4FLC,6MAtFbpE,MAAQ,CAENqE,KAAMvB,EAAKwB,oFAKX,OAAOzF,OAAO0F,WAAa,IAAMN,EAAUE,QAAUF,EAAUC,mDAG7C,IAAA/D,EAAAC,KAElBA,KAAKoE,eAAiB3F,OAAO4F,iBAAiB,SAAU,WAEtDtE,EAAKQ,SAAS,CACZ0D,KAAMlE,EAAKmE,6DAOfzF,OAAO6F,oBAAoB,SAAUtE,KAAKoE,kDAGlCH,EAAM1E,GAWd,IATA,IAAMgF,EAAUN,EAAK,GAAGO,OAClBC,EAAgBR,EAAKS,OAAO,SAACC,EAAGC,GAAJ,OAAUC,KAAKC,IAALC,MAAAF,KAAI,CAAKF,GAALzE,OAAA8E,OAAAC,EAAA,EAAAD,CAAWJ,MAAI,GAAK,EAKhEM,EAAQ,GACRC,EAAO,EATUC,EAAA,SAWZC,GAIP,IAFA,IAAIC,EAASC,oBAAUtB,GAbJuB,EAAA,SAeVC,GAEPH,EAASA,EAAOI,IAAI,SAAAC,GAAG,OAAIA,EAAID,IAAI,SAAAf,GAAC,OAAIA,IAAMc,EAAN,IAAAvF,OAAcmF,EAAII,GAAMd,OAFzDc,EAAI,EAAGA,EAAIhB,GAAiBY,EAAII,EAAIlG,EAAMiF,OAAQiB,IAAKD,EAAvDC,GAKTH,EAAOM,QAAQ,SAAAD,GAETA,EAAIjB,OAAO,SAACC,EAAGC,GAAJ,OAAUD,GAAkB,kBAANC,IAAgB,KAEnDM,GAAK,IAAAhF,OAAQyF,EAAIpE,KAAK,KAAjB,OACL4D,QAdGE,EAAI,EAAGA,EAAI9F,EAAMiF,OAAQa,GAAKZ,EAAeW,EAA7CC,GAqBT,MAAO,CAELQ,iBAAgB,UAAA3F,OAAYiF,EAAZ,YAChBW,oBAAmB,UAAA5F,OAAYqE,EAAZ,UACnBwB,kBAAmBb,oCAId,IAEC3F,EAAUS,KAAKY,MAAfrB,MAER,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOkC,UAAW6B,MAAOjD,KAAKgG,UAAUhG,KAAKJ,MAAMqE,KAAM1E,IACtEA,EAAMmG,IAAI,SAACrC,EAAMgC,GAAP,OAEPvG,EAAAC,EAAAC,cAACiH,EAADjB,OAAAzB,OAAA,CACE2C,IAAK7C,EAAKvD,GACVmD,MAAO,CACLkD,SAAQ,IAAAjG,OAAMmF,KAEZhC,cAhFiBhE,IAAMC,WCnBnCC,EAAQC,IAAMC,OAAO,CAEzBC,QAAS,UAsEI0G,6MAjEbxG,MAAQ,CAEN8D,MAAO,GACPnE,MAAO,GACP8G,OAAQ,+EAGEzF,GAAO,IAAAb,EAAAC,KAEXsC,EAAa1B,EAAMhC,MAAMyD,OAAzBC,SAEN/C,EAAMU,IAAIqC,EAAQ,GAAApC,OAAMoC,EAAN,eAA8B,cAC7CnC,KAAK,SAAAC,GAEJ,GAAmB,MAAfA,EAAIC,OAEN,MAAM,IAAIC,MAAM,kBAJP,IAAAgG,EAOcC,IAAKC,SAASpG,EAAII,MAAnCkD,EAPG4C,EAOH5C,MAAOnE,EAPJ+G,EAOI/G,MAEfQ,EAAKQ,SAAS,CAAEmD,QAAOnE,YAExBkB,MAAM,SAAAC,GAELX,EAAKQ,SAAS,CACZmD,MAAO,GACPnE,MAAO,mDAObS,KAAKW,YAAYX,KAAKY,+CAGR,IAAA6F,EAEYzG,KAAKJ,MAAvByG,EAFMI,EAENJ,OAER,OAJcI,EAEElH,MAEHmH,OAAO,SAAArD,GAAI,OAAgE,IAA5DA,EAAKK,MAAMiD,cAAcC,QAAQP,EAAOM,kDAG7D,IAAAzF,EAAAlB,KAEP,OACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACX,EAAD,MAEAS,EAAAC,EAAAC,cAAC6H,EAAD,CACE/F,MAAOd,KAAKJ,MAAMyG,OAClBxD,SAAU,SAAAwD,GACRnF,EAAKX,SAAS,CAAE8F,cAIpBvH,EAAAC,EAAAC,cAAC8H,EAAD,CACEvH,MAAOS,KAAK+G,0BA5DK1H,IAAMC,WCYjC0H,IAASC,OAAOnI,EAAAC,EAAAC,cAbF,kBAEZF,EAAAC,EAAAC,cAACkI,EAAA,EAAD,KAEEpI,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWlB,IAEjCtH,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,OAAK,EAACC,UAAWlB,IAE/CtH,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAOC,KAAK,wBAAwBC,OAAK,EAACC,UAAWnF,MAKzC,MAAWoF,SAASC,eAAe,STwG7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxH,KAAK,SAAAyH,GACjCA,EAAaC,mCUlInB1J,EAAAC,QAAA,CAAkBgD,UAAA,kDCAlBjD,EAAAC,QAAA,CAAkBgD,UAAA,mDCAlBjD,EAAAC,QAAA,CAAkBgD,UAAA,+DCAlBjD,EAAAC,QAAA,CAAkBgD,UAAA,qDCAlBjD,EAAAC,QAAA,CAAkBgD,UAAA","file":"static/js/main.14f93410.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2eggW\",\"headerTitle\":\"header_headerTitle__3mVQF\",\"headerLink\":\"header_headerLink__qLoAr\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport styles from './header.module.css';\n\n\nimport { IoLogoGithub, IoLogoLinkedin, IoMdMail } from 'react-icons/io';\n\nclass Header extends React.Component {\n\n  render() {\n\n    return (\n      <header className={styles.header}>\n        <p className={styles.headerTitle}>\n          <a href=\"/\" className={styles.headerLink}>\n            Aguang's Blog\n          </a>\n        </p>\n\n        <nav>\n          <ul>\n          <li>\n              <a href=\"https://github.com/aguang-xyz\">\n                <IoLogoGithub />\n              </a>\n            </li>\n\n            <li>\n              <a href=\"https://www.linkedin.com/in/wang-guangrui-80337a193/\">\n                <IoLogoLinkedin />\n              </a>\n            </li>\n\n            <li>\n              <a href=\"mailto:aguang.xyz@gmail.com\">\n                <IoMdMail />\n              </a>\n            </li>\n            \n          </ul>\n        </nav>\n        \n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nimport styles from './post-view.module.css';\n\nimport ReactMarkdown from 'react-markdown';\n\nimport RemarkMathPlugin from \"remark-math\";\n\nimport ReactLatex from 'react-latex';\nimport 'katex/dist/katex.css';\n\nimport ReactHighlight from 'react-highlight';\nimport 'highlight.js/styles/solarized-dark.css';\n\nimport 'github-markdown-css/github-markdown.css';\n\nimport Axios from 'axios';\n\nconst posts = Axios.create({\n\n    baseURL: '/posts',\n});\n\nclass PostView extends React.Component {\n\n    state = {\n\n        content: 'Loading..',\n    };\n    \n    loadContent(id) {\n\n        posts\n            .get(`${id}.md`)\n            .then(ret => {\n\n                if (ret.status === 200) {\n\n                    this.setState({ content: ret.data });\n                } else {\n\n                    throw new Error('Failed to load');\n                }\n            })\n            .catch(e => {\n\n                this.setState({ content: '# Page not found' });\n            })\n    }\n\n    componentDidMount() {\n\n        this.loadContent(this.props.id);\n    }\n\n    componentDidUpdate(prevProps) {\n\n      if (prevProps.id !== this.props.id) {\n\n        this.loadContent(this.props.id);\n      }\n    }\n\n    renderLatex(value) {\n\n        return (\n            <ReactLatex>\n                {value}\n            </ReactLatex>\n        );\n    }\n\n    renderCode(language, value) {\n\n        return (\n            <ReactHighlight className={language}>\n                {value}\n            </ReactHighlight>\n        );\n    }\n\n    render() {\n\n        const classNames = [ styles.container, 'markdown-body' ];\n\n        if (this.props.preview) {\n\n          classNames.push('preview');\n        }\n\n        return (\n            <article className={`${classNames.join(' ')}`}>\n                <ReactMarkdown\n                    source={this.state.content}\n                    plugins={[RemarkMathPlugin]}\n                    renderers={{\n                        math: (text) => this.renderLatex(`$$${text.value}$$`),\n                        inlineMath: (text) => this.renderLatex(`$${text.value}$`),\n                        code: (code) => this.renderCode(code.language, code.value),\n                    }}\n                />\n            </article>\n        );\n    }\n}\n\nexport default PostView;\n","import React from 'react';\n\nimport Header from '../components/header';\nimport PostView from '../components/post-view';\n\nclass PostPage extends React.Component {\n\n  render() {\n\n    const { category, name } = this.props.match.params;\n\n    return (\n\n      <div>\n        <Header />\n\n        <PostView id={`${category}/${name}`} /> \n      </div>\n    );\n  }\n}\n\nexport default PostPage;\n","import React from 'react';\n\nimport styles from './search-box.module.css';\n\nclass SearchBox extends React.Component {\n\n  render() {\n\n    return (\n\n      <div className={styles.container}>\n\n        <input\n          placeholder=\"Search..\"\n          value={this.props.change}\n          onChange={e => this.props.onChange(e.target.value)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchBox;\n","import React from 'react';\n\nimport styles from './image-view.module.css';\n\nconst ImageView = (image) => (\n\n  <div className={styles.container}\n        style={{ backgroundImage: `url(${image.src})` }}>\n  </div>\n);\n\nexport default ImageView;\n","import React from 'react';\n\nimport styles from './post-preview.module.css';\n\nimport PostView from './post-view';\nimport ImageView from './image-view';\n\nconst getLink = (post) => {\n\n  if (post.link) {\n\n    return post.link;\n  }\n\n  return `#/post/${post.id}`;\n};\n\nconst getPreview = (post) => {\n\n  if (post.image) {\n\n    return <ImageView src={post.image} />\n  }\n\n  return <PostView id={post.id} preview />\n}\n\n\nconst PostPreview = (post) => (\n      \n  <div\n    className={styles.container}\n    style={post.style}\n    onClick={() => window.location.assign(getLink(post))}>\n\n    <figcaption>\n      <p>{post.title}</p>\n    </figcaption>\n\n    {getPreview(post)}\n  </div>\n);\n\nexport default PostPreview;\n","/* eslint-disable no-loop-func */\nimport React from 'react';\n\nimport styles from './post-preview-container.module.css';\n\nimport { cloneDeep } from 'lodash';\n\nimport PostPreview from './post-preview';\n\nconst gridModes = {\n\n  mobile: [\n    [0, 0],\n    [1, 2],\n    [1, 3],\n    [4, 3],\n  ],\n\n  desktop: [\n    [0, 0, 0, 1, 1, 2],\n    [0, 0, 0, 1, 1, 2],\n    [0, 0, 0, 3, 3, 3],\n    [4, 5, 5, 3, 3, 3],\n    [4, 5, 5, 3, 3, 3],\n  ],\n};\n\nclass PostPreviewContainer extends React.Component {\n\n  state = {\n\n    mode: this.getMode(),\n  };\n\n  getMode() {\n\n    return window.innerWidth > 600 ? gridModes.desktop : gridModes.mobile;\n  }\n\n  componentDidMount() {\n\n    this._resizeHandler = window.addEventListener('resize', () => {\n\n      this.setState({\n        mode: this.getMode(),\n      });\n    });\n  }\n\n  componentWillUnmount() {\n\n    window.removeEventListener('resize', this._resizeHandler);\n  }\n\n  getStyleX(mode, posts) {\n\n    const columns = mode[0].length;\n    const itemsPerGroup = mode.reduce((x, y) => Math.max(x, ...y), 0) + 1;\n\n    // console.log(`columns = ${columns}`);\n    // console.log(`itemsPerGroup = ${itemsPerGroup}`);\n\n    let areas = '';\n    let rows = 0;\n\n    for (let i = 0; i < posts.length; i += itemsPerGroup) {\n\n      let matrix = cloneDeep(mode);\n\n      for (let j = 0; j < itemsPerGroup && i + j < posts.length; j++) {\n\n        matrix = matrix.map(row => row.map(x => x === j ? `p${i + j}` : x));\n      }\n\n      matrix.forEach(row => {\n        \n        if (row.reduce((x, y) => x || typeof y === 'string', false)) {\n\n          areas += `'${row.join(' ')}'\\n`;\n          rows++;\n        }\n      });\n    }\n\n    // console.log(areas);\n\n    return {\n\n      gridTemplateRows: `repeat(${rows}, 10rem)`,\n      gridTemplateColumns: `repeat(${columns}, 1fr)`,\n      gridTemplateAreas: areas,\n    }\n  }\n\n  render() {\n\n    const { posts } = this.props;\n\n    return (\n      <div className={styles.container} style={this.getStyleX(this.state.mode, posts)}>\n        {posts.map((post, i) => (\n          \n            <PostPreview\n              key={post.id}\n              style={{\n                gridArea: `p${i}`,\n              }}\n              {...post}\n            />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default PostPreviewContainer;\n","import React from 'react';\nimport Axios from 'axios';\nimport Yaml from 'js-yaml';\n\nimport Header from '../components/header';\nimport SearchBox from '../components/search-box';\nimport PostPreviewContainer from '../components/post-preview-container';\n\nconst posts = Axios.create({\n\n  baseURL: 'posts',\n});\n\nclass CategoryPage extends React.Component {\n\n  state = {\n\n    title: '',\n    posts: [],\n    search: '',\n  };\n\n  loadContent(props) {\n    \n    let { category } = props.match.params;\n\n    posts.get(category ? `${category}/index.yaml` : 'index.yaml')\n      .then(ret => {\n\n        if (ret.status !== 200) {\n\n          throw new Error('Failed to load');\n        }\n\n        const { title, posts } = Yaml.safeLoad(ret.data);\n\n        this.setState({ title, posts });\n      })\n      .catch(e => {\n\n        this.setState({\n          title: '',\n          posts: [],\n        });\n      });\n  }\n\n  componentDidMount() {\n\n    this.loadContent(this.props);\n  }\n\n  filteredPosts() {\n\n    const { search, posts } = this.state;\n\n    return posts.filter(post => post.title.toLowerCase().indexOf(search.toLowerCase()) !== -1);\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Header />\n\n        <SearchBox\n          value={this.state.search}\n          onChange={search => {\n            this.setState({ search })\n          }}\n        />\n\n        <PostPreviewContainer\n          posts={this.filteredPosts()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CategoryPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport * as serviceWorker from './plugins/serviceWorker';\n\nimport './index.css';\n\nimport PostPage from './pages/post-page';\n\nimport CategoryPage from './pages/category-page';\n\nconst Index = () => (\n\n  <Router>\n    \n    <Route path=\"/\" exact component={CategoryPage} />\n    \n    <Route path=\"/post/:category\" exact component={CategoryPage} />\n\n    <Route path=\"/post/:category/:name\" exact component={PostPage} />\n\n  </Router>\n);\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"post-view_container__3ZSNx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"search-box_container__tJoFh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"post-preview-container_container__22LX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"post-preview_container__wJEqz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"image-view_container__2SZVi\"};"],"sourceRoot":""}